apiVersion: template.openshift.io/v1
kind: Template
metadata:
    annotations:
      iconClass: icon-postgresql
      openshift.io/display-name: Odoo ERP with Postgres database
      openshift.io/documentation-url: http://gitlab.paas.agesic.red.uy/franklin.gomez/odoo-ocp
      openshift.io/provider-display-name: Div. TE-TecnologÃ­as, Agesic
    name: odoo
    namespace: odoo
objects:
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      annotations:
        template.alpha.openshift.io/wait-for-ready: "true"
      generation: 1
      labels:
        app: odoo-crm
      name: ${DATABASE_SERVICE_NAME}
    spec:
      replicas: 1
      revisionHistoryLimit: 10
      selector:
        name: ${DATABASE_SERVICE_NAME}
      strategy:
        activeDeadlineSeconds: 21600
        recreateParams:
          post:
            execNewPod:
              command:
              - /bin/bash
              - -c
              - PGPASSWORD=$POSTGRESQL_ADMIN_PASSWORD psql -h ${DATABASE_SERVICE_NAME}
                -c "alter user $POSTGRESQL_USER with createdb;" $POSTGRESQL_DATABASE
              containerName: postgresql
            failurePolicy: Abort
          timeoutSeconds: 600
        resources: {}
        type: Recreate
      template:
        metadata:
          creationTimestamp: null
          labels:
            name: ${DATABASE_SERVICE_NAME}
        spec:
          containers:
          - env:
            - name: POSTGRESQL_USER
              valueFrom:
                secretKeyRef:
                  key: database-user
                  name: ${DATABASE_SERVICE_NAME}
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-password
                  name: ${DATABASE_SERVICE_NAME}
            - name: POSTGRESQL_DATABASE
              valueFrom:
                secretKeyRef:
                  key: database-name
                  name: ${DATABASE_SERVICE_NAME}
            - name: POSTGRESQL_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-admin-password
                  name: ${DATABASE_SERVICE_NAME}
            image: null
            imagePullPolicy: IfNotPresent
            livenessProbe:
              exec:
                command:
                - /usr/libexec/check-container
                - --live
              failureThreshold: 3
              initialDelaySeconds: 120
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 10
            name: postgresql
            ports:
            - containerPort: 5432
              protocol: TCP
            readinessProbe:
              exec:
                command:
                - /usr/libexec/check-container
              failureThreshold: 3
              initialDelaySeconds: 5
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 1
            resources:
              limits:
                memory: 512Mi
            securityContext:
              capabilities: {}
              privileged: false
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /var/lib/pgsql/data
              name: db-data
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
          volumes:
          - name: db-data
            persistentVolumeClaim:
              claimName: vol-${PROJECT_NAME}-${DATABASE_SERVICE_NAME}-claim
      test: false
      triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
          - postgresql
          from:
            kind: ImageStreamTag
            name: postgresql:${DATABASE_VERSION}
            namespace: openshift
        type: ImageChange
      - type: ConfigChange
    status:
      availableReplicas: 0
      latestVersion: 0
      observedGeneration: 0
      replicas: 0
      unavailableReplicas: 0
      updatedReplicas: 0
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      annotations:
        template.alpha.openshift.io/wait-for-ready: "true"
      creationTimestamp: null
      generation: 1
      labels:
        app: odoo-crm
      name: ${ODOO_SERVICE_NAME}
    spec:
      replicas: 1
      selector:
        app: odoo-crm
        deploymentconfig: ${ODOO_SERVICE_NAME}
      strategy:
        activeDeadlineSeconds: 21600
        resources: {}
        rollingParams:
          intervalSeconds: 1
          maxSurge: 25%
          maxUnavailable: 25%
          timeoutSeconds: 600
          updatePeriodSeconds: 1
        type: Rolling
      template:
        metadata:
          annotations:
            openshift.io/generated-by: OpenShiftWebConsole
          creationTimestamp: null
          labels:
            app: odoo-crm
            deploymentconfig: ${ODOO_SERVICE_NAME}
        spec:
          containers:
          - env:
            - name: HOST
              value: ${DATABASE_SERVICE_NAME}
            - name: USER
              valueFrom:
                secretKeyRef:
                  key: database-user
                  name: ${DATABASE_SERVICE_NAME}
            - name: PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-password
                  name: ${DATABASE_SERVICE_NAME}
            image: fgomezotero/odoo-ocp:v.1.0
            imagePullPolicy: IfNotPresent
            name: ${ODOO_SERVICE_NAME}
            ports:
            - containerPort: 8069
              protocol: TCP
            - containerPort: 8071
              protocol: TCP
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /mnt/extra-addons
              name: odoo-ocp-1
            - mountPath: /var/lib/odoo
              name: odoo-data
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
          volumes:
          - emptyDir: {}
            name: odoo-ocp-1
          - name: odoo-data
            persistentVolumeClaim:
              claimName: vol-${PROJECT_NAME}-${ODOO_SERVICE_NAME}-claim
      test: false
      triggers:
      - type: ConfigChange
    status:
      availableReplicas: 0
      latestVersion: 0
      observedGeneration: 0
      replicas: 0
      unavailableReplicas: 0
      updatedReplicas: 0
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        template.openshift.io/expose-uri: postgres://{.spec.clusterIP}:{.spec.ports[?(.name=="postgresql")].port}
      creationTimestamp: null
      labels:
        app: odoo-crm
      name: ${DATABASE_SERVICE_NAME}
    spec:
      ports:
      - name: postgresql
        port: 5432
        protocol: TCP
        targetPort: 5432
      selector:
        name: ${DATABASE_SERVICE_NAME}
      sessionAffinity: None
      type: ClusterIP
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        openshift.io/generated-by: OpenShiftWebConsole
      creationTimestamp: null
      labels:
        app: odoo-crm
      name: ${ODOO_SERVICE_NAME}
    spec:
      ports:
      - name: 8069-tcp
        port: 8069
        protocol: TCP
        targetPort: 8069
      - name: 8071-tcp
        port: 8071
        protocol: TCP
        targetPort: 8071
      selector:
        deploymentconfig: ${ODOO_SERVICE_NAME}
      sessionAffinity: None
      type: ClusterIP
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: vol-${PROJECT_NAME}-${DATABASE_SERVICE_NAME}-claim
    spec:
      accessModes:
      - ReadWriteMany
      resources:
        requests:
          storage: 5Gi
      
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      annotations: null
      name: vol-${PROJECT_NAME}-${ODOO_SERVICE_NAME}-claim
    spec:
      accessModes:
      - ReadWriteMany
      resources:
        requests:
          storage: 5Gi       
  - apiVersion: v1          
    kind: Route
    metadata:
      name: ${ODOO_SERVICE_NAME}
    spec:
      to:
        kind: Service
        name: ${ODOO_SERVICE_NAME}
        weight: 100
      port:
        targetPort: 8069-tcp
      tls:
        termination: edge
        insecureEdgeTerminationPolicy: Redirect
        wildcardPolicy: None      
  - apiVersion: v1
    kind: Secret
    metadata:
      annotations:
        template.openshift.io/expose-database_admin_password: '{.data[''database-admin-password'']}'
        template.openshift.io/expose-database_name: '{.data[''database-name'']}'
        template.openshift.io/expose-password: '{.data[''database-password'']}'
        template.openshift.io/expose-username: '{.data[''database-user'']}'
      creationTimestamp: null
      labels:
        app: odoo-crm
      name: ${DATABASE_SERVICE_NAME}
    stringData:
      database-admin-password: ${POSTGRESQL_ADMIN_PASSWORD}
      database-name: postgres
      database-password: ${POSTGRESQL_PASSWORD}
      database-user: ${POSTGRESQL_USER}
    type: Opaque
parameters:
  - description: Needed to include in the PVC naming convention
    displayName: Project name
    name: PROJECT_NAME
  - description: All objects created for the database backend go to have this name
    displayName: Postgresql database service name
    name: DATABASE_SERVICE_NAME
    value: db
  - description: Odoo schema displayName:Service Name
    name: ODOO_SERVICE_NAME
    value: odoo
  - description: The Odoo App version 12 requires at least the base version >
      9.5
    displayName: Postgresql database version
    name: DATABASE_VERSION
    value: 10-el8
  - description: Odoo Postgress database user
    displayName: User owner of the base for the App
    name: POSTGRESQL_USER
    value: odoo
  - description: Database Password
    displayName: Password of the db user who owns the base for the App
    name: POSTGRESQL_PASSWORD
    value: odoo
  - description: Postgresql Admin Password
    displayName: Postgresql Admin Password
    name: POSTGRESQL_ADMIN_PASSWORD
    value: postgres
